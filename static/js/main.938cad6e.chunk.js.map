{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","phrase","callback","event","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"iPAQaA,EAAb,4MACEC,MAAQ,CACNC,OAAQ,2BAFZ,EAaEC,SAAW,SAACC,GACV,EAAKC,SAAS,CAAEH,OAAO,4BAAD,OAA8BE,EAAME,IAApC,QAd1B,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,YAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,YAV/C,oBAiBE,WACE,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAA6BF,KAAKR,MAAMC,eApBhD,GAAyBU,IAAMC,W,MCH/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.938cad6e.chunk.js","sourcesContent":["import React from 'react';\n\nimport './App.scss';\n\ntype State = {\n  phrase: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    phrase: 'Nothing was pressed yet',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.callback);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.callback);\n  }\n\n  callback = (event: KeyboardEvent) => {\n    this.setState({ phrase: `The last pressed key is [${event.key}]` });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">{this.state.phrase}</p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}